/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.vallorani.test;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.ImageIcon;

/**
 *
 * @author andrea
 */
public class Board2 extends javax.swing.JPanel implements Runnable {

    private Thread animator;
    private int x1, x2;
    /**
     * Creates new form Board2
     */
    public Board2() {
        initComponents();
    }
    
    @Override
    public void addNotify() {
        super.addNotify();

        animator = new Thread(this);
        animator.start();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        drawStar(g);
    }

    private void drawStar(Graphics g) {
        //g.drawImage(star, x, y, this);
        //System.out.println(x+" "+y);
        this.s1.setLocation(x1, 50);
        this.s2.setLocation(x2, 130);
        Toolkit.getDefaultToolkit().sync();
    }

    private void cycle() {

        x1 += ThreadLocalRandom.current().nextInt(0,20);
        x2 += ThreadLocalRandom.current().nextInt(0,20);

        if (x1 > 500) {
            x1 = 0;
        }
        if (x2 > 500) {
            x2 = 0;
        }
    }

    @Override
    public void run() {

        long beforeTime, timeDiff, sleep;

        beforeTime = System.currentTimeMillis();

        while (true) {

            cycle();
            repaint();

            timeDiff = System.currentTimeMillis() - beforeTime;
            sleep = 200 - timeDiff;

            if (sleep < 0) {
                sleep = 2;
            }

            try {
                Thread.sleep(sleep);
            } catch (InterruptedException e) {
                System.out.println("Interrupted: " + e.getMessage());
            }

            beforeTime = System.currentTimeMillis();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        s2 = new javax.swing.JLabel();
        s1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setSize(new java.awt.Dimension(350, 350));

        s2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/vallorani/test/star.png"))); // NOI18N

        s1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/vallorani/test/star.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(s1)
                    .addComponent(s2))
                .addContainerGap(414, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(s1)
                .addGap(18, 18, 18)
                .addComponent(s2)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel s1;
    private javax.swing.JLabel s2;
    // End of variables declaration//GEN-END:variables
}
